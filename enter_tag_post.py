# -*- coding: utf-8 -*-
import re

"""
企业标签后处理
"""


tag_items={
    "存储设备":	["寄存器","集成类存储卡","存储设备"],
    "感知设备":	["传感器","感应设备","RFID","摄像头","识别标签","生物特征识别"],
    "芯片":	["芯片设计","芯片生产","芯片封测"],
    "通信模组":	["通信传输设备","通信交换设备","通信终端设备","移动通信设备","移动通信终端设备","通信设备修理","通信设备","通信模组"],
    "网络运营":	["有线网络","无线网络","卫星网络","网络运营"],
    "系统安全服务":	["系统安全服务","系统安全评估","系统安全检测"],
    "基础软件服务":	["中间件","支撑软件","虚拟化软件","操作系统","基础软件服务"],
    "平台服务":	["边缘计算平台","大数据处理平台","IOT物联平台","设备管理平台","平台服务"],
    "场景应用及软件开发":["SCADA","DNC","MDC","设备控制管理","采集程序","场景应用及软件开发"],
    "消费物联网":	["智能穿戴","智能家居","消费物联网"],
    "产业物联网":	["工业物联网平台","农业物联网","车联网平台","产业物联网"],
    "集成应用":	["智慧物流","智慧楼宇","智慧城市","智慧电网","安防"]
}

post_tags=["存储设备","芯片","网络运营","通信模组", "基础软件服务","消费物联网","产业物联网"]

def enter_tag_valid(text_list,pred_tags):
    """
    除了平台服务、场景应用及软件开发、传感器普通项，其他都需要关键词匹配
    """
    valid_tags=set()
    text=";".join(text_list)
    for tag in pred_tags:
        if tag in post_tags:
            pattern = re.compile("|".join(tag_items[tag]))
            res = pattern.findall(text)
            if len(res)>0:
                #print(res)
                valid_tags.add(tag)
        elif tag!="nan":
            valid_tags.add(tag)
    return valid_tags


